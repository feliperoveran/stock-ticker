from typing import Dict, Optional
from pydantic import BaseModel, Field, conint

import datetime


class DailyData(BaseModel):
    open: float
    high: float
    low: float
    close: float
    adjusted_close: float
    volume: int
    dividend_amount: float
    split_coefficient: float


class NDaysResponse(BaseModel):
    average_closing_price: float = Field(
        ...,
        description='Add here',
        example="1.22"
    )
    symbol: str = Field(
        ...,
        description="Stock symbol",
        example="MSFT"
    )
    ndays: str = Field(
        ...,
        description="Number of days to lookback in order to return stock data",
        example="7"
    )
    daily_data: Dict[datetime.date, DailyData] = Field(
        ...,
        description="Daily data"
    )


class Problem(BaseModel):
    type: Optional[str] = Field(
        'about:blank',
        description='A URI reference that uniquely identifies the problem type only in the context of the provided API. Opposed to the specification in RFC-7807, it is neither recommended to be dereferenceable and point to a human-readable documentation nor globally unique for the problem type.\n',
        example='/some/uri-reference',
    )
    title: Optional[str] = Field(
        None,
        description='A short summary of the problem type. Written in English and readable for engineers, usually not suited for non technical stakeholders and not localized.\n',
        example='some title for the error situation',
    )
    status: Optional[conint(ge=100, lt=600)] = Field(
        None,
        description='The HTTP status code generated by the origin server for this occurrence of the problem.\n',
    )
    detail: Optional[str] = Field(
        None,
        description='A human readable explanation specific to this occurrence of the problem that is helpful to locate the problem and give advice on how to proceed. Written in English and readable for engineers, usually not suited for non technical stakeholders and not localized.\n',
        example='some description for the error situation',
    )
    instance: Optional[str] = Field(
        None,
        description='A URI reference that identifies the specific occurrence of the problem, e.g. by adding a fragment identifier or sub-path to the problem type. May be used to locate the root of this problem in the source code.\n',
        example='/some/uri-reference#specific-occurrence-context',
    )


class HealthCheck(BaseModel):
    status: str = Field(
        None,
        description="API status",
        example="OK"
    )
